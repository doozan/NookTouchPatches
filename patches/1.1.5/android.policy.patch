diff --git a/com/android/internal/policy/impl/LockScreen.smali b/com/android/internal/policy/impl/LockScreen.smali
index 3a440a0..52d9b76 100644
--- a/com/android/internal/policy/impl/LockScreen.smali
+++ b/com/android/internal/policy/impl/LockScreen.smali
@@ -48,6 +48,7 @@
 
 .field private mSelector:Lcom/android/internal/widget/LeftSlidingTab;
 
+.field private mSecondResume:Z
 
 # direct methods
 .method static constructor <clinit>()V
@@ -921,6 +922,54 @@
     .registers 5
 
     .prologue
+### Mod Start
+###
+### onResume gets called twice, once to setup the screensaver
+### and once to wait for the unlock trigger.  We need to let the
+### first call pass through and unlock on the second call
+###
+### if ( ! mSecondResume )
+###   ModUtils.onScreenSleep(mContext);
+### else {
+###   ModUtils.onScreenResume(mContext);
+###   if ( ! ModUtils.disableDragToUnlock(mContext) ) {
+###     KeyguardScreenCallback.goToUnlockScreen();
+###     return;
+###   }
+### }
+### mSecondResume = 1;
+###
+
+    iget-boolean v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mSecondResume:Z
+    if-nez v1, :cond_ModElse
+
+    iget-object v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mContext:Landroid/content/Context;
+    invoke-static {v1}, Lcom/android/server/status/ModUtils;->onScreenSleep(Landroid/content/Context;)V
+
+    goto :cond_ModEndIf
+    :cond_ModElse
+
+    iget-object v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mContext:Landroid/content/Context;
+    invoke-static {v1}, Lcom/android/server/status/ModUtils;->onScreenResume(Landroid/content/Context;)V
+
+    invoke-static {v1}, Lcom/android/server/status/ModUtils;->disableDragToUnlock(Landroid/content/Context;)Z
+    move-result v1
+    if-eqz v1, :cond_NoMod
+
+    iget-object v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mCallback:Lcom/android/internal/policy/impl/KeyguardScreenCallback;
+    invoke-interface {v1}, Lcom/android/internal/policy/impl/KeyguardScreenCallback;->goToUnlockScreen()V
+
+	  return-void
+
+	  :cond_ModEndIf
+
+    const/4 v1, 0x1
+    iput-boolean v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mSecondResume:Z
+
+    :cond_NoMod
+
+### Mod End
+
     .line 685
     invoke-direct {p0}, Lcom/android/internal/policy/impl/LockScreen;->updateBackgroundImage()V
 
@@ -950,6 +999,7 @@
     .line 693
     .end local v0           #r:Landroid/graphics/Rect;
     :cond_17
+
     const-string v1, "LockScreen"
 
     sget-object v2, Landroid/hardware/EpdController$HwRegion;->DIALOG:Landroid/hardware/EpdController$HwRegion;
diff --git a/com/android/internal/policy/impl/ModUtils.smali b/com/android/internal/policy/impl/ModUtils.smali
new file mode 100644
index 0000000..dfcd15c
--- /dev/null
+++ b/com/android/internal/policy/impl/ModUtils.smali
@@ -0,0 +1,123 @@
+.class public Lcom/android/internal/policy/impl/ModUtils;
+.super Ljava/lang/Object;
+.source "ModUtils.java"
+
+
+# static fields
+.field private static final TAG:Ljava/lang/String; = "NookMod"
+
+.field private static final VERSION:Ljava/lang/String; = "0.1.1"
+
+.field private static volatile mContext:Lcom/android/internal/policy/impl/PhoneWindowManager;
+
+
+# direct methods
+.method public constructor <init>()V
+    .registers 1
+
+    .prologue
+    .line 7
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method private static doAction(Landroid/content/Context;Ljava/lang/String;)Z
+    .registers 3
+    .parameter "context"
+    .parameter "action"
+
+    .prologue
+    .line 34
+    invoke-static {p0, p1}, Lcom/android/server/status/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v0
+
+    return v0
+.end method
+
+.method public static getContext()Lcom/android/internal/policy/impl/PhoneWindowManager;
+    .registers 1
+
+    .prologue
+    .line 46
+    sget-object v0, Lcom/android/internal/policy/impl/ModUtils;->mContext:Lcom/android/internal/policy/impl/PhoneWindowManager;
+
+    return-object v0
+.end method
+
+.method public static getVersion()Ljava/lang/String;
+    .registers 1
+
+    .prologue
+    .line 14
+    const-string v0, "0.1.1"
+
+    return-object v0
+.end method
+
+.method public static onHomeKeyPress(Landroid/content/Context;)Z
+    .registers 4
+    .parameter "context"
+
+    .prologue
+    .line 17
+    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v1
+
+    .line 18
+    .local v1, resolver:Landroid/content/ContentResolver;
+    const-string v2, "mod.key.home.cmd"
+
+    invoke-static {v1, v2}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v0
+
+    .line 21
+    .local v0, action:Ljava/lang/String;
+    invoke-static {p0, v0}, Lcom/android/internal/policy/impl/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v2
+
+    return v2
+.end method
+
+.method public static onHomeKeyPressLong(Landroid/content/Context;)Z
+    .registers 4
+    .parameter "context"
+
+    .prologue
+    .line 25
+    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v1
+
+    .line 26
+    .local v1, resolver:Landroid/content/ContentResolver;
+    const-string v2, "mod.key.home_long.cmd"
+
+    invoke-static {v1, v2}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v0
+
+    .line 29
+    .local v0, action:Ljava/lang/String;
+    invoke-static {p0, v0}, Lcom/android/internal/policy/impl/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v2
+
+    return v2
+.end method
+
+.method public static setContext(Lcom/android/internal/policy/impl/PhoneWindowManager;)V
+    .registers 1
+    .parameter "context"
+
+    .prologue
+    .line 40
+    sput-object p0, Lcom/android/internal/policy/impl/ModUtils;->mContext:Lcom/android/internal/policy/impl/PhoneWindowManager;
+
+    .line 41
+    return-void
+.end method
diff --git a/com/android/internal/policy/impl/PhoneWindowManager.smali b/com/android/internal/policy/impl/PhoneWindowManager.smali
index 60f3f2a..79e3f14 100644
--- a/com/android/internal/policy/impl/PhoneWindowManager.smali
+++ b/com/android/internal/policy/impl/PhoneWindowManager.smali
@@ -946,11 +946,18 @@
     .local v7, delta3:J
     move-object/from16 v0, p0
 
-    iget-boolean v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHasGlowLight:Z
+### MOD Start
+###
+###   Remove the check for bHasGlowlight so that all
+###   devices will trigger the 2-second long home press
 
-    move/from16 v16, v0
+#    iget-boolean v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHasGlowLight:Z
+
+#    move/from16 v16, v0
+
+#    if-eqz v16, :cond_ae
 
-    if-eqz v16, :cond_ae
+### MOD End
 
     .line 2817
     const-wide/16 v16, 0x7cf
@@ -967,9 +974,33 @@
 
     if-nez v16, :cond_ae
 
+### MOD Start
+###
+###   Override the 2 second long home key press action.
+###
+### if ( ! ModUtils.onHomeKeyPressLong( context ) )
+###   if (bHasGlowlight)
+###     toggleLights;
+
+    move-object/from16 v0, p0
+    iget-object v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mContext:Landroid/content/Context;
+    invoke-static {v0}, Lcom/android/internal/policy/impl/ModUtils;->onHomeKeyPressLong(Landroid/content/Context;)Z
+
+    move-result v0
+    if-nez v0, :cond_mod1
+
+    move-object/from16 v0, p0
+    iget-boolean v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHasGlowLight:Z
+
+    move/from16 v16, v0
+    if-eqz v16, :cond_mod1
+
     .line 2820
     invoke-direct/range {p0 .. p0}, Lcom/android/internal/policy/impl/PhoneWindowManager;->toggleLights()V
 
+    :cond_mod1
+### MOD End
+
     .line 2821
     const/16 v16, 0x1
 
@@ -1047,6 +1078,26 @@
 
     if-gez v16, :cond_11d
 
+### MOD Start
+###
+###   Override the home key press action
+###
+### if ( ModUtils.onHomeKeyPress() )
+###   return 0;
+
+    move-object/from16 v0, p0
+    iget-object v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mContext:Landroid/content/Context;
+    invoke-static {v0}, Lcom/android/internal/policy/impl/ModUtils;->onHomeKeyPress(Landroid/content/Context;)Z
+
+    move-result v0
+    if-eqz v0, :cond_mod2
+
+    const/4 v0, 0x0
+    return v0
+
+    :cond_mod2
+### MOD End
+
     .line 2835
     const-string v16, "WindowManager"
 
@@ -3379,6 +3430,13 @@
     .parameter "powerManager"
 
     .prologue
+
+### MOD Start
+####
+#### Store a reference to this object so we can call internal methods from ModUtils
+	invoke-static {p0}, Lcom/android/internal/policy/impl/ModUtils;->setContext(Lcom/android/internal/policy/impl/PhoneWindowManager;)V
+### MOD End
+
     const/4 v10, 0x1
 
     const/high16 v6, 0x1020
