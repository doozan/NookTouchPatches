diff --git a/android.policy/.gitignore b/android.policy/.gitignore
new file mode 100644
index 0000000..7664704
--- /dev/null
+++ b/android.policy/.gitignore
@@ -0,0 +1 @@
+*.bak
\ No newline at end of file
diff --git a/android.policy/com/android/internal/policy/impl/LockScreen.smali b/android.policy/com/android/internal/policy/impl/LockScreen.smali
index b7f7e46..d471e36 100644
--- a/android.policy/com/android/internal/policy/impl/LockScreen.smali
+++ b/android.policy/com/android/internal/policy/impl/LockScreen.smali
@@ -847,6 +847,66 @@
     .registers 6
 
     .prologue
+
+
+### Mod Start
+###
+### When the system is first booted, onResume is called once just
+### to display the lockscreen and wait for the unlock.
+###
+### When sleeping, onResume gets called twice:
+### first to set up the screensaver
+### and then to display the lockscreen and wait for the unlock.
+###
+### We can distinguish between a call to setup the screensaver
+### and a call to display the lockscreen by calling
+### KeyguardManager->inKeyguardRestrictedInputMode
+### Thanks to antsm on xda-developers for posting this technique
+###
+### if ( ! KeyguardManager->inKeyguardRestrictedInputMode )
+###   ModUtils.onScreenSleep(mContext);
+### else {
+###   ModUtils.onScreenResume(mContext);
+###   if ( ! ModUtils.disableDragToUnlock(mContext) ) {
+###     KeyguardScreenCallback.goToUnlockScreen();
+###     return;
+###   }
+### }
+###
+
+    iget-object v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mContext:Landroid/content/Context;
+    const-string v2, "keyguard"
+    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+    move-result-object v1
+
+    check-cast v1, Landroid/app/KeyguardManager;
+    invoke-virtual {v1}, Landroid/app/KeyguardManager;->inKeyguardRestrictedInputMode()Z
+    move-result v1
+
+    if-nez v1, :cond_ModElse
+
+    iget-object v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mContext:Landroid/content/Context;
+    invoke-static {v1}, Lcom/android/server/status/ModUtils;->onScreenSleep(Landroid/content/Context;)V
+
+    goto :cond_ModEnd
+    :cond_ModElse
+
+    iget-object v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mContext:Landroid/content/Context;
+    invoke-static {v1}, Lcom/android/server/status/ModUtils;->onScreenResume(Landroid/content/Context;)V
+
+    invoke-static {v1}, Lcom/android/server/status/ModUtils;->disableDragToUnlock(Landroid/content/Context;)Z
+    move-result v1
+    if-eqz v1, :cond_ModEnd
+
+    iget-object v1, p0, Lcom/android/internal/policy/impl/LockScreen;->mCallback:Lcom/android/internal/policy/impl/KeyguardScreenCallback;
+    invoke-interface {v1}, Lcom/android/internal/policy/impl/KeyguardScreenCallback;->goToUnlockScreen()V
+
+    return-void
+
+    :cond_ModEnd
+
+### Mod End
+
     .line 689
     invoke-direct {p0}, Lcom/android/internal/policy/impl/LockScreen;->updateBackgroundImage()V
 
diff --git a/android.policy/com/android/internal/policy/impl/ModUtils$Keyinfo.smali b/android.policy/com/android/internal/policy/impl/ModUtils$Keyinfo.smali
new file mode 100644
index 0000000..da1a4b3
--- /dev/null
+++ b/android.policy/com/android/internal/policy/impl/ModUtils$Keyinfo.smali
@@ -0,0 +1,96 @@
+.class Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+.super Ljava/lang/Object;
+.source "ModUtils.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Lcom/android/internal/policy/impl/ModUtils;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0xa
+    name = "Keyinfo"
+.end annotation
+
+
+# instance fields
+.field public volatile actionresult:Z
+
+.field public volatile isActionPerformed:Z
+
+.field public volatile keycode:I
+
+.field public volatile settingname:Ljava/lang/String;
+
+.field public volatile startpressmillis:J
+
+
+# direct methods
+.method public constructor <init>(ILjava/lang/String;)V
+    .registers 6
+    .parameter "keycode"
+    .parameter "settingname"
+
+    .prologue
+    const/4 v2, 0x0
+
+    .line 28
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    .line 24
+    const-wide/16 v0, 0x0
+
+    iput-wide v0, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->startpressmillis:J
+
+    .line 25
+    iput-boolean v2, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->isActionPerformed:Z
+
+    .line 26
+    iput-boolean v2, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->actionresult:Z
+
+    .line 29
+    iput p1, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->keycode:I
+
+    .line 30
+    iput-object p2, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->settingname:Ljava/lang/String;
+
+    .line 31
+    return-void
+.end method
+
+
+# virtual methods
+.method public setActionPerformed(Z)V
+    .registers 3
+    .parameter "result"
+
+    .prologue
+    .line 39
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->isActionPerformed:Z
+
+    .line 40
+    iput-boolean p1, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->actionresult:Z
+
+    .line 41
+    return-void
+.end method
+
+.method public setKeyPressed(J)V
+    .registers 4
+    .parameter "millis"
+
+    .prologue
+    .line 34
+    iput-wide p1, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->startpressmillis:J
+
+    .line 35
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->isActionPerformed:Z
+
+    .line 36
+    return-void
+.end method
diff --git a/android.policy/com/android/internal/policy/impl/ModUtils.smali b/android.policy/com/android/internal/policy/impl/ModUtils.smali
new file mode 100644
index 0000000..23f8010
--- /dev/null
+++ b/android.policy/com/android/internal/policy/impl/ModUtils.smali
@@ -0,0 +1,578 @@
+.class public Lcom/android/internal/policy/impl/ModUtils;
+.super Ljava/lang/Object;
+.source "ModUtils.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+    }
+.end annotation
+
+
+# static fields
+.field private static final TAG:Ljava/lang/String; = "NookMod"
+
+.field private static final VERSION:Ljava/lang/String; = "0.2.0"
+
+.field private static volatile keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+.field private static volatile mContext:Lcom/android/internal/policy/impl/PhoneWindowManager;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 5
+
+    .prologue
+    .line 15
+    const/4 v0, 0x4
+
+    new-array v0, v0, [Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    const/4 v1, 0x0
+
+    new-instance v2, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    const/16 v3, 0x5c
+
+    const-string v4, "topleft"
+
+    invoke-direct {v2, v3, v4}, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;-><init>(ILjava/lang/String;)V
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x1
+
+    .line 16
+    new-instance v2, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    const/16 v3, 0x5d
+
+    const-string v4, "bottomleft"
+
+    invoke-direct {v2, v3, v4}, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;-><init>(ILjava/lang/String;)V
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x2
+
+    .line 17
+    new-instance v2, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    const/16 v3, 0x5e
+
+    const-string v4, "topright"
+
+    invoke-direct {v2, v3, v4}, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;-><init>(ILjava/lang/String;)V
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x3
+
+    .line 18
+    new-instance v2, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    const/16 v3, 0x5f
+
+    const-string v4, "bottomright"
+
+    invoke-direct {v2, v3, v4}, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;-><init>(ILjava/lang/String;)V
+
+    aput-object v2, v0, v1
+
+    .line 15
+    sput-object v0, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    .line 19
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .registers 1
+
+    .prologue
+    .line 8
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method private static doAction(Landroid/content/Context;Ljava/lang/String;)Z
+    .registers 3
+    .parameter "context"
+    .parameter "action"
+
+    .prologue
+    .line 64
+    invoke-static {p0, p1}, Lcom/android/server/status/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v0
+
+    return v0
+.end method
+
+.method public static getContext()Lcom/android/internal/policy/impl/PhoneWindowManager;
+    .registers 1
+
+    .prologue
+    .line 76
+    sget-object v0, Lcom/android/internal/policy/impl/ModUtils;->mContext:Lcom/android/internal/policy/impl/PhoneWindowManager;
+
+    return-object v0
+.end method
+
+.method public static getVersion()Ljava/lang/String;
+    .registers 1
+
+    .prologue
+    .line 44
+    const-string v0, "0.2.0"
+
+    return-object v0
+.end method
+
+.method public static interceptKeyTi(IZI)Z
+    .registers 16
+    .parameter "keycode"
+    .parameter "keydown"
+    .parameter "repeatCount"
+
+    .prologue
+    const/4 v8, 0x1
+
+    const/4 v9, 0x0
+
+    .line 84
+    :try_start_2
+    const-string v10, "com.android.internal.policy.impl.PhoneWindowManager"
+
+    invoke-static {v10}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;
+
+    move-result-object v10
+
+    const-string v11, "mContext"
+
+    invoke-virtual {v10, v11}, Ljava/lang/Class;->getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;
+
+    move-result-object v10
+
+    invoke-static {}, Lcom/android/internal/policy/impl/ModUtils;->getContext()Lcom/android/internal/policy/impl/PhoneWindowManager;
+
+    move-result-object v11
+
+    invoke-virtual {v10, v11}, Ljava/lang/reflect/Field;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Context;
+    :try_end_18
+    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_18} :catch_2e
+
+    .line 89
+    .local v2, context:Landroid/content/Context;
+    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v5
+
+    .line 93
+    .local v5, resolver:Landroid/content/ContentResolver;
+    :try_start_1c
+    const-string v10, "mod_sidebtndelay_long"
+
+    invoke-static {v5, v10}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v10}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J
+    :try_end_25
+    .catch Ljava/lang/Exception; {:try_start_1c .. :try_end_25} :catch_57
+
+    move-result-wide v6
+
+    .line 101
+    .local v6, sidebtndelay_long:J
+    :goto_26
+    const/4 v4, 0x0
+
+    .local v4, i:I
+    :goto_27
+    sget-object v10, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    array-length v10, v10
+
+    if-lt v4, v10, :cond_5b
+
+    move v8, v9
+
+    .line 134
+    .end local v2           #context:Landroid/content/Context;
+    .end local v4           #i:I
+    .end local v5           #resolver:Landroid/content/ContentResolver;
+    .end local v6           #sidebtndelay_long:J
+    :cond_2d
+    :goto_2d
+    return v8
+
+    .line 85
+    :catch_2e
+    move-exception v3
+
+    .line 86
+    .local v3, e:Ljava/lang/Exception;
+    const-string v8, "NookMod"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    const-string v11, "interceptKeyTi context failed "
+
+    invoke-direct {v10, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v3}, Ljava/lang/Exception;->toString()Ljava/lang/String;
+
+    move-result-object v11
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, "\n"
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v3}, Ljava/lang/Exception;->getCause()Ljava/lang/Throwable;
+
+    move-result-object v11
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v8, v10}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
+
+    move v8, v9
+
+    .line 87
+    goto :goto_2d
+
+    .line 95
+    .end local v3           #e:Ljava/lang/Exception;
+    .restart local v2       #context:Landroid/content/Context;
+    .restart local v5       #resolver:Landroid/content/ContentResolver;
+    :catch_57
+    move-exception v3
+
+    .line 96
+    .restart local v3       #e:Ljava/lang/Exception;
+    const-wide/16 v6, 0x7d0
+
+    .restart local v6       #sidebtndelay_long:J
+    goto :goto_26
+
+    .line 102
+    .end local v3           #e:Ljava/lang/Exception;
+    .restart local v4       #i:I
+    :cond_5b
+    sget-object v10, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v10, v10, v4
+
+    iget v10, v10, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->keycode:I
+
+    if-ne p0, v10, :cond_123
+
+    .line 103
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    const-string v11, "mod.key."
+
+    invoke-direct {v10, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+
+    sget-object v11, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v11, v11, v4
+
+    iget-object v11, v11, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->settingname:Ljava/lang/String;
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, ".cmd"
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v5, v10}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v0
+
+    .line 104
+    .local v0, action:Ljava/lang/String;
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    const-string v11, "mod.key."
+
+    invoke-direct {v10, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+
+    sget-object v11, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v11, v11, v4
+
+    iget-object v11, v11, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->settingname:Ljava/lang/String;
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, "_long.cmd"
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v5, v10}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v1
+
+    .line 105
+    .local v1, actionlong:Ljava/lang/String;
+    if-eqz v0, :cond_a9
+
+    invoke-virtual {v0}, Ljava/lang/String;->length()I
+
+    move-result v10
+
+    if-nez v10, :cond_b4
+
+    :cond_a9
+    if-eqz v1, :cond_b1
+
+    invoke-virtual {v1}, Ljava/lang/String;->length()I
+
+    move-result v10
+
+    if-nez v10, :cond_b4
+
+    :cond_b1
+    move v8, v9
+
+    .line 106
+    goto/16 :goto_2d
+
+    .line 109
+    :cond_b4
+    if-eqz p1, :cond_c5
+
+    if-nez p2, :cond_c5
+
+    .line 110
+    sget-object v9, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v9, v9, v4
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v10
+
+    invoke-virtual {v9, v10, v11}, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->setKeyPressed(J)V
+
+    goto/16 :goto_2d
+
+    .line 113
+    :cond_c5
+    if-eqz p1, :cond_ed
+
+    if-eqz p2, :cond_ed
+
+    .line 114
+    sget-object v9, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v9, v9, v4
+
+    iget-boolean v9, v9, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->isActionPerformed:Z
+
+    if-nez v9, :cond_2d
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v9
+
+    sget-object v11, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v11, v11, v4
+
+    iget-wide v11, v11, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->startpressmillis:J
+
+    sub-long/2addr v9, v11
+
+    cmp-long v9, v9, v6
+
+    if-ltz v9, :cond_2d
+
+    .line 115
+    sget-object v9, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v9, v9, v4
+
+    invoke-static {v2, v1}, Lcom/android/internal/policy/impl/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v10
+
+    invoke-virtual {v9, v10}, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->setActionPerformed(Z)V
+
+    goto/16 :goto_2d
+
+    .line 119
+    :cond_ed
+    sget-object v8, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v8, v8, v4
+
+    iget-boolean v8, v8, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->isActionPerformed:Z
+
+    if-nez v8, :cond_10f
+
+    .line 120
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v8
+
+    sget-object v10, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v10, v10, v4
+
+    iget-wide v10, v10, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->startpressmillis:J
+
+    sub-long/2addr v8, v10
+
+    cmp-long v8, v8, v6
+
+    if-gez v8, :cond_117
+
+    .line 121
+    sget-object v8, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v8, v8, v4
+
+    invoke-static {v2, v0}, Lcom/android/internal/policy/impl/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v9
+
+    invoke-virtual {v8, v9}, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->setActionPerformed(Z)V
+
+    .line 127
+    :cond_10f
+    :goto_10f
+    sget-object v8, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v8, v8, v4
+
+    iget-boolean v8, v8, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->actionresult:Z
+
+    goto/16 :goto_2d
+
+    .line 124
+    :cond_117
+    sget-object v8, Lcom/android/internal/policy/impl/ModUtils;->keys:[Lcom/android/internal/policy/impl/ModUtils$Keyinfo;
+
+    aget-object v8, v8, v4
+
+    invoke-static {v2, v1}, Lcom/android/internal/policy/impl/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v9
+
+    invoke-virtual {v8, v9}, Lcom/android/internal/policy/impl/ModUtils$Keyinfo;->setActionPerformed(Z)V
+
+    goto :goto_10f
+
+    .line 101
+    .end local v0           #action:Ljava/lang/String;
+    .end local v1           #actionlong:Ljava/lang/String;
+    :cond_123
+    add-int/lit8 v4, v4, 0x1
+
+    goto/16 :goto_27
+.end method
+
+.method public static onHomeKeyPress(Landroid/content/Context;)Z
+    .registers 4
+    .parameter "context"
+
+    .prologue
+    .line 47
+    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v1
+
+    .line 48
+    .local v1, resolver:Landroid/content/ContentResolver;
+    const-string v2, "mod.key.home.cmd"
+
+    invoke-static {v1, v2}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v0
+
+    .line 51
+    .local v0, action:Ljava/lang/String;
+    invoke-static {p0, v0}, Lcom/android/internal/policy/impl/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v2
+
+    return v2
+.end method
+
+.method public static onHomeKeyPressLong(Landroid/content/Context;)Z
+    .registers 4
+    .parameter "context"
+
+    .prologue
+    .line 55
+    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v1
+
+    .line 56
+    .local v1, resolver:Landroid/content/ContentResolver;
+    const-string v2, "mod.key.home_long.cmd"
+
+    invoke-static {v1, v2}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v0
+
+    .line 59
+    .local v0, action:Ljava/lang/String;
+    invoke-static {p0, v0}, Lcom/android/internal/policy/impl/ModUtils;->doAction(Landroid/content/Context;Ljava/lang/String;)Z
+
+    move-result v2
+
+    return v2
+.end method
+
+.method public static setContext(Lcom/android/internal/policy/impl/PhoneWindowManager;)V
+    .registers 1
+    .parameter "context"
+
+    .prologue
+    .line 70
+    sput-object p0, Lcom/android/internal/policy/impl/ModUtils;->mContext:Lcom/android/internal/policy/impl/PhoneWindowManager;
+
+    .line 71
+    return-void
+.end method
diff --git a/android.policy/com/android/internal/policy/impl/PhoneWindowManager.smali b/android.policy/com/android/internal/policy/impl/PhoneWindowManager.smali
index 3700cb4..e9b2b48 100644
--- a/android.policy/com/android/internal/policy/impl/PhoneWindowManager.smali
+++ b/android.policy/com/android/internal/policy/impl/PhoneWindowManager.smali
@@ -946,11 +946,18 @@
     .local v7, delta3:J
     move-object/from16 v0, p0
 
-    iget-boolean v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHasGlowLight:Z
+### MOD Start
+###
+###   Remove the check for bHasGlowlight so that all
+###   devices will trigger the 2-second long home press
 
-    move/from16 v16, v0
+#    iget-boolean v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHasGlowLight:Z
+
+#    move/from16 v16, v0
 
-    if-eqz v16, :cond_ae
+#    if-eqz v16, :cond_ae
+
+### MOD End
 
     .line 2795
     const-wide/16 v16, 0x7cf
@@ -967,9 +974,33 @@
 
     if-nez v16, :cond_ae
 
+### MOD Start
+###
+###   Override the 2 second long home key press action.
+###
+### if ( ! ModUtils.onHomeKeyPressLong( context ) )
+###   if (bHasGlowlight)
+###     toggleLights;
+
+    move-object/from16 v0, p0
+    iget-object v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mContext:Landroid/content/Context;
+    invoke-static {v0}, Lcom/android/internal/policy/impl/ModUtils;->onHomeKeyPressLong(Landroid/content/Context;)Z
+
+    move-result v0
+    if-nez v0, :cond_mod1
+
+    move-object/from16 v0, p0
+    iget-boolean v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mHasGlowLight:Z
+
+    move/from16 v16, v0
+    if-eqz v16, :cond_mod1
+
     .line 2798
     invoke-direct/range {p0 .. p0}, Lcom/android/internal/policy/impl/PhoneWindowManager;->toggleLights()V
 
+    :cond_mod1
+### MOD End
+
     .line 2799
     const/16 v16, 0x1
 
@@ -1047,6 +1078,26 @@
 
     if-gez v16, :cond_11d
 
+### MOD Start
+###
+###   Override the home key press action
+###
+### if ( ModUtils.onHomeKeyPress() )
+###   return 0;
+
+    move-object/from16 v0, p0
+    iget-object v0, v0, Lcom/android/internal/policy/impl/PhoneWindowManager;->mContext:Landroid/content/Context;
+    invoke-static {v0}, Lcom/android/internal/policy/impl/ModUtils;->onHomeKeyPress(Landroid/content/Context;)Z
+
+    move-result v0
+    if-eqz v0, :cond_mod2
+
+    const/4 v0, 0x0
+    return v0
+
+    :cond_mod2
+### MOD End
+
     .line 2813
     const-string v16, "WindowManager"
 
@@ -3191,6 +3242,13 @@
     .parameter "powerManager"
 
     .prologue
+
+### MOD Start
+####
+#### Store a reference to this object so we can call internal methods from ModUtils
+	invoke-static {p0}, Lcom/android/internal/policy/impl/ModUtils;->setContext(Lcom/android/internal/policy/impl/PhoneWindowManager;)V
+### MOD End
+
     const/4 v10, 0x1
 
     const/high16 v6, 0x1020
@@ -4594,6 +4652,32 @@
 
     .line 1361
     :cond_2af
+
+### MOD Start
+###
+###   Filter key presses to trap side button presses
+###
+### if (ModUtils.interceptKeyTi(keycode, keydown, repeatCount))
+###    return true;
+###
+
+    move/from16 v1, p2
+    move/from16 v2, p4
+    move/from16 v3, p5
+
+    invoke-static {v1, v2, v3}, Lcom/android/internal/policy/impl/ModUtils;->interceptKeyTi(IZI)Z
+    
+    move-result v0
+    if-eqz v0, :cond_mod3
+
+    const/16 v18, 0x1
+
+    return v18
+
+    :cond_mod3
+
+### MOD End
+
     const/16 v18, 0x0
 
     goto/16 :goto_21
